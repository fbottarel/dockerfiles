FROM {{ cuda.base_image }}
LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"

RUN apt-get update && apt-get install -y --no-install-recommends \
{% set os_short = cuda.os.version | replace(".", "") -%}
{% if cuda.os.version == "18.04" -%}
    gnupg2 curl ca-certificates && \
    {% set os_version_path = "1710" -%}
    {% if cuda.version.major | int >= 10 -%}
        {% set os_version_path = "1804" -%}
    {% endif -%}
    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{os_version_path}}/x86_64/7fa2af80.pub | apt-key add - && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{os_version_path}}/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    {% if cuda.version.major | int < 10 -%}
        {% set os_version_path = "1604" -%}
    {% endif -%}
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu{{os_version_path}}/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    apt-get purge --autoremove -y curl && \
{% elif cuda.os.version == "14.04" or cuda.os.version == "16.04" -%}
    {% set tail_num = 5 -%}
    {% if cuda.os.version == "14.04" -%}
        {% set tail_num = 2 -%}
    {% endif -%}
    ca-certificates apt-transport-https gnupg-curl && \
    NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \
    NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{ os_short }}/x86_64/7fa2af80.pub && \
    apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +{{ tail_num }} > cudasign.pub && \
    echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{ os_short }}/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    {% if cuda.version.major | int > 8 -%}
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu{{ os_short }}/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    {% endif -%}
    apt-get purge --auto-remove -y gnupg-curl && \
{% endif -%}
    rm -rf /var/lib/apt/lists/*

ENV CUDA_VERSION {{ cuda.version.full }}

ENV CUDA_PKG_VERSION {{ cuda.version.major }}-{{ cuda.version.minor }}=$CUDA_VERSION-1

# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
RUN apt-get update && apt-get install -y --no-install-recommends \
        cuda-cudart-$CUDA_PKG_VERSION \
{% if cuda.version.major | int == 10 -%}
        cuda-compat-{{ cuda.version.major }}-{{ cuda.version.minor }} && \
{% elif cuda.version.major | int == 8 -%}
        cuda-nvrtc-$CUDA_PKG_VERSION \
        cuda-nvgraph-$CUDA_PKG_VERSION \
        cuda-cusolver-$CUDA_PKG_VERSION \
        cuda-cublas-8-0=8.0.61.2-1 \
        cuda-cufft-$CUDA_PKG_VERSION \
        cuda-curand-$CUDA_PKG_VERSION \
        cuda-cusparse-$CUDA_PKG_VERSION \
        cuda-npp-$CUDA_PKG_VERSION && \
{% else -%}
        && \
{% endif -%}
    ln -s cuda-{{ cuda.version.major }}.{{ cuda.version.minor }} /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

# Required for nvidia-docker v1
{% if cuda.version.major | int < 10 -%}
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

{% endif -%}

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>={{ cuda.version.major }}.{{ cuda.version.minor }} {{ cuda.requires }}"
