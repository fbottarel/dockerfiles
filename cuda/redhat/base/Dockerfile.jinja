{% if cuda.os.version | int == 6 and cuda.arch == "x86_64" and cuda.tag_suffix == "-patched-glibc" -%}
FROM centos:6 as centos-with-vsyscall

# make the image manylinux2010 compliant
RUN yum install -y git
RUN git clone https://github.com/pypa/manylinux.git /manylinux
RUN bash /manylinux/docker/glibc/build_scripts/rebuild-glibc-without-vsyscall.sh

FROM centos:6

COPY --from=centos-with-vsyscall \
    /rpms/glibc-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/glibc-common-2.12-1.212.1.el6.x86_64.rpm \
    #/rpms/glibc-debuginfo-2.12-1.212.1.el6.x86_64.rpm \
    #/rpms/glibc-debuginfo-common-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/glibc-devel-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/glibc-headers-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/glibc-static-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/glibc-utils-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/nscd-2.12-1.212.1.el6.x86_64.rpm \
    /rpms/

RUN yum -y install /rpms/* && rm -rf /rpms && yum -y clean all && rm -rf /var/cache/yum/* && \
    # if we updated glibc, we need to strip locales again...
    localedef --list-archive | grep -v -i ^en_US.utf8 | xargs localedef --delete-from-archive && \
    mv -f /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl && \
    build-locale-archive && \
    find /usr/share/locale -mindepth 1 -maxdepth 1 -not \( -name 'en*' -or -name 'locale.alias' \) | xargs rm -rf
{% else -%}
FROM {{ cuda.base_image }}
{% endif -%}

LABEL maintainer "NVIDIA CORPORATION <sw-cuda-installer@nvidia.com>"

RUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \
{% set version = cuda.os.version -%}
{# FIXME: change once we have rhel8 packages -#}
{% if cuda.os.version | int == 8 -%}
    {% set version = 7 -%}
{% endif -%}
    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/rhel{{ version }}/x86_64/7fa2af80.pub | sed '/^Version/d' > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA && \
    echo "$NVIDIA_GPGKEY_SUM  /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA" | sha256sum -c {% if cuda.os.version | int != 6 -%}--strict {% endif -%} -

COPY cuda.repo /etc/yum.repos.d/cuda.repo

ENV CUDA_VERSION {{ cuda.version.full }}

ENV CUDA_PKG_VERSION {{ cuda.version.major }}-{{ cuda.version.minor }}-$CUDA_VERSION-1
# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
RUN yum install -y \
{% if cuda.version.major | int == 8 -%}
        cuda-nvrtc-$CUDA_PKG_VERSION \
        cuda-nvgraph-$CUDA_PKG_VERSION \
        cuda-cusolver-$CUDA_PKG_VERSION \
        cuda-cublas-{{ cuda.version.major }}-{{ cuda.version.minor }}-{{ cuda.version.full }}.2-1 \
        cuda-cufft-$CUDA_PKG_VERSION \
        cuda-curand-$CUDA_PKG_VERSION \
        cuda-cusparse-$CUDA_PKG_VERSION \
        cuda-npp-$CUDA_PKG_VERSION \
        cuda-cudart-$CUDA_PKG_VERSION \
{% else -%}
        cuda-cudart-$CUDA_PKG_VERSION \
{% endif -%}
{% if cuda.version.major | int == 10 -%}
        cuda-compat-{{ cuda.version.major }}-{{ cuda.version.minor }} \
{% endif -%}
        && \
    ln -s cuda-{{ cuda.version.major }}.{{ cuda.version.minor }} /usr/local/cuda && \
    rm -rf /var/cache/yum/*

# nvidia-docker 1.0
{% if cuda.version.major | int == 8 or cuda.version.major | int == 9 -%}
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

{% endif -%}

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>={{ cuda.version.major }}.{{ cuda.version.minor }} {{ cuda.requires }}"
