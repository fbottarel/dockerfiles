#!/bin/bash
#
# DESCRIPTION:
#
#   Set the bash prompt according to:
#    * the active virtualenv
#    * the branch of the current git/mercurial repository
#    * the return value of the previous command
#    * the fact you just came from Windows and are used to having newlines in
#      your prompts.
#
# USAGE:
#
#   1. Save this file as ~/.bash_prompt
#   2. Add the following line to the end of your ~/.bashrc or ~/.bash_profile:
#        . ~/.bash_prompt
#
# LINEAGE:
#
#   Based on work by woods
#
#   https://gist.github.com/31967


# determine git branch name

function parse_git_branch(){
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/[\1]/'
}

# determine mercurial branch name

function parse_hg_branch(){
  hg branch 2> /dev/null | awk '{print " (" $1 ")"}'
}

# Determine the branch/state information for this git repository.

function set_git_branch() {

  # Get the name of the branch.
  
  if [ ! -d ".git" ]; then
    branch=""
  else
    branch=$(parse_git_branch)
  fi

  # Set the final branch string.
  
  if [ -z "$branch" ]
  then
    BRANCH=""    
  else
    BRANCH="${YELLOW}-${PURPLE}${branch}${COLOR_NONE}"  
  fi
     
}

# Return the prompt symbol to use, colorized based on the return value of the
# previous command.

function set_prompt_symbol () {
  if test $1 -eq 0 ; then
      PROMPT_SYMBOL="->"
  else
      PROMPT_SYMBOL="${LIGHT_RED}->${COLOR_NONE}"
  fi
}

# Determine active Python virtualenv details.

function set_virtualenv () {
  if test -z "$VIRTUAL_ENV" ; then
      PYTHON_VIRTUALENV=""
  else
      PYTHON_VIRTUALENV="${YELLOW}-${BLUE}[`basename \"$VIRTUAL_ENV\"`]${COLOR_NONE}"
  fi
}

# Set the full bash prompt.

function set_bash_prompt () {

  # The various escape codes that we can use to color our prompt.
  
        local RED="\[\033[0;31m\]"
     local YELLOW="\[\033[1;33m\]"
      local GREEN="\[\033[0;32m\]"
       local BLUE="\[\033[1;34m\]"
     local PURPLE="\[\033[0;35m\]"
  local LIGHT_RED="\[\033[1;31m\]"
local LIGHT_GREEN="\[\033[1;32m\]"
      local WHITE="\[\033[1;37m\]"
 local LIGHT_GRAY="\[\033[0;37m\]"
 local COLOR_NONE="\[\e[0m\]"

  local BRANCH=""
  local PROMPT_SYMBOL=""
  local PYTHON_VIRTUALENV=""

  # Set the PROMPT_SYMBOL variable. We do this first so we don't lose the
  # return value of the last command.
  
  set_prompt_symbol $?

  # Set the PYTHON_VIRTUALENV variable.
  
  set_virtualenv

  # Set the BRANCH variable.
  
  set_git_branch

  # Set the bash prompt variable.
  # This is where the magic happens. 
  # Look up the fancy commands in the bash manual 
  # https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Controlling-the-Prompt

  PS1="\n${YELLOW}[${LIGHT_GREEN}\u${GREEN}@${LIGHT_GREEN}\h${YELLOW}]-[${WHITE}jobs:\j${YELLOW}]-[${WHITE}\w${YELLOW}]${PYTHON_VIRTUALENV}${BRANCH}${COLOR_NONE}
${PROMPT_SYMBOL} "

}

# Tell bash to execute this function just before displaying its prompt.

PROMPT_COMMAND=set_bash_prompt